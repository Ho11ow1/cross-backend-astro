---
	import { GetBackend, GetBackendURL } from "@data/AstroDefs.ts";
	import { GetAllUsers, GetUserById, DeleteUserById } from "@data/Fetch.ts";
	import type { User } from "@data/Types.ts";

	const users: User[] = (await GetAllUsers()) ?? [];
---

<html lang="en">
	<head>
		<title>Astro</title>

		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		
		<meta name="viewport" content="width=device-width" />
		<meta name="generator" content={Astro.generator} />
		<meta charset="utf-8" />
	</head>
	<body>
		<h1>Astro</h1>
		<h3>{`${GetBackend()}`}</h3>
		<h3>{`${GetBackendURL()}`}</h3>
		{
			users.map((user) => {
				return (
					<div>
						<h1>ID: {user.Id}</h1>
						<h2>Username: {user.UserName}</h2>
						<h2>Password: {user.Password}</h2>
						{user.Email && <h2>Email: {user.Email}</h2>}
						{user.DisplayName && <h2>DisplayName: {user.DisplayName}</h2>}
					</div>
				);
			})
		}
		<input type="number" id="userId" placeholder="User ID"/>
		<button onclick="GetUser()">Click Me</button>
		<h4>User count: {users.length}</h4> 
	</body>

	<script is:inline>
		async function GetUser()
		{
			const userId = document.getElementById("userId").value;
			GetUserById(userId).then(user => {
				if (user)
				{
					alert(`ID: ${user.Id}\nUsername: ${user.UserName}\nPassword: ${user.Password}\nEmail: ${user.Email}\nDisplayName: ${user.DisplayName}`);
				}
				else
				{
					alert("User not found");
				}
			}).catch(error => {
				alert(`Error: ${error.message}`);
			});
		}
	</script>
</html>
